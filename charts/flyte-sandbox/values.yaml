docker-registry:
  image:
    repository: registry
    tag: sandbox
    pullPolicy: Never
  persistence:
    enabled: false
  service:
    type: NodePort
    nodePort: 30000

flyte-binary:
  configuration:
    database:
      password: postgres
      port: 30001
    storage:
      metadataContainer: my-s3-bucket
      userDataContainer: my-s3-bucket
      provider: s3
      providerConfig:
        s3:
          disableSSL: true
          endpoint: http://localhost:30002
          authType: accesskey
          accessKey: minio
          secretKey: miniostorage
    logging:
      level: 6
      plugins:
        kubernetes:
          enabled: true
          templateUri: |-
            http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
    inline:
      remoteData:
        region: us-east-2
        scheme: aws
        signedUrls:
          durationMinutes: 3
      plugins:
        databricks:
          entrypointFile: dbfs:///FileStore/tables/entrypoint-4.py
          # Databricks account
          databricksInstance: dbaccount.cloud.databricks.com
        k8s:
          default-env-vars:
            - FLYTE_AWS_ACCESS_KEY_ID: myaccesskey
            - FLYTE_AWS_SECRET_ACCESS_KEY: mysecretkey
      storage:
        type: s3
        container: "flyte-databricks"
        stow:
          kind: s3
          config:
            access_key_id: myaccesskey
            auth_type: accesskey
            secret_key: mysecretkey
            disable_ssl: true
            region: us-east-2
      tasks:
        task-plugins:
          enabled-plugins:
            - container
            - sidecar
            - K8S-ARRAY
            - databricks
          default-for-task-types:
            - container: container
            - container_array: K8S-ARRAY
            - spark: databricks
  deployment:
    image:
      repository: flyte-binary
      tag: sandbox
      pullPolicy: Never
    waitForDB:
      image:
        repository: bitnami/postgresql
        tag: sandbox
        pullPolicy: Never
    extraPodSpec:
      hostNetwork: true

kubernetes-dashboard:
  image:
    repository: kubernetesui/dashboard
    tag: sandbox
    pullPolicy: Never
  extraArgs:
    - --enable-insecure-login
    - --enable-skip-login
  protocolHttp: true
  service:
    externalPort: 80
  rbac:
    create: true
    clusterRoleMetrics: false
    clusterReadOnlyRole: true

minio:
  image:
    repository: bitnami/minio
    tag: sandbox
    pullPolicy: Never
  auth:
    rootUser: minio
    rootPassword: miniostorage
  defaultBuckets: my-s3-bucket
  extraEnvVars:
    - name: MINIO_BROWSER_REDIRECT_URL
      value: http://localhost:30080/minio
  service:
    type: NodePort
    nodePorts:
      api: 30002
  persistence:
    enabled: true
    storageClass: local-path

postgresql:
  image:
    repository: bitnami/postgresql
    tag: sandbox
    pullPolicy: Never
  auth:
    postgresPassword: postgres
  shmVolume:
    enabled: false
  primary:
    service:
      type: NodePort
      nodePorts:
        postgresql: 30001
    persistence:
      enabled: true
      storageClass: local-path

sandbox:
  proxy:
    image:
      repository: envoyproxy/envoy
      tag: sandbox
      pullPolicy: Never
