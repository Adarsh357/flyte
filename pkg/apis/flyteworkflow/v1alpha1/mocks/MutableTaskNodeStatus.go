// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import types "github.com/lyft/flyteplugins/go/tasks/v1/types"

// MutableTaskNodeStatus is an autogenerated mock type for the MutableTaskNodeStatus type
type MutableTaskNodeStatus struct {
	mock.Mock
}

// GetCustomState provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetCustomState() map[string]interface{} {
	ret := _m.Called()

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func() map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	return r0
}

// GetPhase provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetPhase() types.TaskPhase {
	ret := _m.Called()

	var r0 types.TaskPhase
	if rf, ok := ret.Get(0).(func() types.TaskPhase); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(types.TaskPhase)
	}

	return r0
}

// GetPhaseVersion provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetPhaseVersion() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// SetCustomState provides a mock function with given fields: state
func (_m *MutableTaskNodeStatus) SetCustomState(state map[string]interface{}) {
	_m.Called(state)
}

// SetPhase provides a mock function with given fields: phase
func (_m *MutableTaskNodeStatus) SetPhase(phase types.TaskPhase) {
	_m.Called(phase)
}

// SetPhaseVersion provides a mock function with given fields: version
func (_m *MutableTaskNodeStatus) SetPhaseVersion(version uint32) {
	_m.Called(version)
}
